openapi: 3.1.0
info:
  version: 1.0.0
  title: Bilxtra Product APIs
  description: |
    APIs for searching Crystallize products, looking up compatible Thule products, and retrieving vehicle details.
    
    Common use cases:
    1. Finding a roof rack:
       - If you have the license plate, use /api/vehicle-lookup to get car details
       - Then use /api/thule/lookup with those details to find compatible racks
       - If no license plate, manually enter car details in /api/thule/lookup
    
    2. Finding other car accessories:
       - Use /api/vehicle-lookup to get detailed car specifications
       - Use /api/product-search with relevant terms to find products
       - Vehicle details can help select the right product variant
  contact:
    url: https://bilxtra.no

servers:
  - url: https://bilxtra-product-updater.vercel.app
    description: Production API server

paths:
  /api/product-search:
    get:
      operationId: searchProducts
      summary: Search for products in the Crystallize catalog
      description: |
        Returns a list of products matching the search term, with cleaned URLs for Bilxtra.no.
        Products with stock less than 3 are filtered out to ensure availability.
        Results are limited to top 5 matches.
      parameters:
        - name: q
          in: query
          required: true
          description: The search term to find products (matches against product name or SKU)
          schema:
            type: string
            example: "ladekabel til etron"
      responses:
        '200':
          description: A list of products matching the search criteria (max 5 results, stock >= 3)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - name
                    - itemId
                    - url
                    - variant
                  properties:
                    name:
                      type: string
                      description: The name of the product
                      example: "BAG TIL LADEKABEL PACKLINE"
                    itemId:
                      type: string
                      description: Unique identifier for the product in Crystallize
                      example: "670e7081b31888406ab9c536"
                    url:
                      type: string
                      description: Clean URL to the product page on Bilxtra.no
                      example: "https://bilxtra.no/utstyr/elbil-og-hybrid/tilbehor/bag-til-ladekabel-packline"
                    variant:
                      type: object
                      required:
                        - sku
                        - name
                        - image
                        - price
                        - stock
                      properties:
                        sku:
                          type: string
                          description: Product SKU (Stock Keeping Unit)
                          example: "LAD-11009663"
                        name:
                          type: string
                          description: Variant name/description
                          example: "BAG TIL LADEKABEL PACKLINE"
                        image:
                          type: object
                          required:
                            - url
                            - key
                          properties:
                            url:
                              type: string
                              description: URL to the product image
                              example: "https://media.crystallize.com/bilxtra-prod/24/10/16/1/pac-11009663-packline-ladekabelbag-01.jpg"
                            key:
                              type: string
                              description: Crystallize media key for the image
                              example: "bilxtra-prod/24/10/16/1/pac-11009663-packline-ladekabelbag-01.jpg"
                        price:
                          type: number
                          description: The default price of the product variant in NOK
                          example: 119.20
                        stock:
                          type: number
                          description: The current stock level of the product variant (always >= 3)
                          example: 298
        '400':
          description: Bad request - missing search term
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Search term is required"
        '500':
          description: Server error during search
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                  - details
                  - searchTerm
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Failed to perform search"
                  details:
                    type: string
                    description: Detailed error information
                    example: "GraphQL error: Invalid query structure"
                  searchTerm:
                    type: string
                    description: The search term that caused the error
                    example: "kjetting"

  /api/thule/lookup:
    get:
      operationId: lookupThuleProducts
      summary: Find compatible Thule products for a specific car
      description: |
        Returns compatible Thule products based on car specifications. Uses a scoring system:
        - Complete racks (3 points each)
        - Individual components (1 point each)
        Best match selected by: highest score, complete solutions preferred, then full component sets.

        The API uses flexible matching:
        1. If the rail type (variation) is not provided or no matches are found, it will attempt to infer the correct type.
        2. If no matches are found with the specified door count (e.g., 4-dr vs 5-dr), it will try alternative configurations.
        3. The response will indicate what values were automatically detected.
      parameters:
        - name: make
          in: query
          required: true
          description: Car manufacturer (e.g., Audi)
          schema:
            type: string
          example: Audi
        - name: model
          in: query
          required: true
          description: Car model (e.g., e-tron)
          schema:
            type: string
          example: e-tron
        - name: year
          in: query
          required: true
          description: Car model year
          schema:
            type: integer
            minimum: 1900
            maximum: 2100
          example: 2019
        - name: doors
          in: query
          required: true
          description: |
            Number of doors specification (e.g., 5-dr).
            Note: The API will try alternative door configurations if no match is found.
            For example, a car listed as 4-dr in Vegvesen might match a 5-dr in Thule's database.
          schema:
            type: string
            enum: [5-dr, 4-dr, 3-dr, 2-dr]
          example: 5-dr
        - name: variation
          in: query
          required: false
          description: |
            Car roof rail type/configuration. If not provided or if no matches are found,
            the API will attempt to detect the correct type automatically.
          schema:
            type: string
            enum:
              - med integrerte relinger
              - med takrenner, med høyt tak
              - med takrenner
              - med normalt tak
              - med integrerte relinger og klemfot
              - med normalt tak uten glasstak
              - med T-profil
              - Integrerte relinger og festepunktfot
              - med faste punkter
              - med takskinner
              - med hevede skinner
              - med faste punkter, uten glasstak
              - med faste punkter, med høyt tak
              - med fabrikkinstallert tverrstang
          example: med integrerte relinger
      responses:
        '200':
          description: Successful response with product matches
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - productGroups
                  - car
                  - k_type
                properties:
                  success:
                    type: boolean
                    description: Whether the lookup was successful
                  productGroups:
                    type: array
                    description: Groups of compatible Thule products
                    items:
                      $ref: '#/components/schemas/ProductGroup'
                  k_type:
                    type: array
                    description: K-type specifications
                    items:
                      type: string
                    example: ["138779", "134328"]
                  car:
                    $ref: '#/components/schemas/CarInfo'
                  inferred:
                    type: object
                    description: Present when rail type and/or door configuration were automatically detected
                    required:
                      - message
                      - detected
                      - original
                    properties:
                      message:
                        type: string
                        description: User-friendly message about what was automatically detected
                        example: "Rail type and door configuration were automatically detected"
                      detected:
                        type: object
                        required:
                          - variation
                          - doors
                        properties:
                          variation:
                            type: string
                            description: The rail type that was automatically detected
                            example: "med normalt tak"
                          doors:
                            type: string
                            description: The door configuration that was automatically detected
                            example: "5-dr"
                      original:
                        type: object
                        required:
                          - variation
                          - doors
                        properties:
                          variation:
                            type: string
                            nullable: true
                            description: The original rail type that was provided (if any)
                            example: null
                          doors:
                            type: string
                            description: The original door configuration that was provided
                            example: "4-dr"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - productGroups
                  - message
                  - query
                properties:
                  success:
                    type: boolean
                    example: false
                  productGroups:
                    type: array
                    items: {}
                  message:
                    type: string
                    example: "Missing required parameters"
                  query:
                    type: object
                    properties:
                      make:
                        type: string
                        nullable: true
                      model:
                        type: string
                        nullable: true
                      year:
                        type: integer
                        nullable: true
                      doors:
                        type: string
                        nullable: true
                      variation:
                        type: string
                        nullable: true
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - error
                  - car
                  - productGroups
                  - k_type
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Failed to process request"
                  car:
                    type: object
                    properties:
                      make:
                        type: string
                        example: ""
                      model:
                        type: string
                        example: ""
                      variation:
                        type: string
                        example: ""
                      doors:
                        type: string
                        example: ""
                      yearRange:
                        type: object
                        properties:
                          start:
                            type: integer
                            example: 0
                          end:
                            type: integer
                            example: 0
                  productGroups:
                    type: array
                    items: {}
                  k_type:
                    type: array
                    items: {}

  /api/vehicle-lookup:
    get:
      operationId: lookupVehicle
      summary: Get detailed vehicle information from a Norwegian license plate
      description: |
        Returns vehicle information from Statens Vegvesen's database. Use this data to:
        1. Find compatible Thule products via /api/thule/lookup
        2. Get specs for selecting car accessories
        3. Verify vehicle details
      parameters:
        - name: plate
          in: query
          required: true
          description: Norwegian license plate (e.g., EB34033)
          schema:
            type: string
            pattern: ^[A-Z]{2}[0-9]{4,5}$
          example: "EB34033"
      responses:
        '200':
          description: Successful vehicle lookup
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - car
                properties:
                  success:
                    type: boolean
                    description: Whether the lookup was successful
                  car:
                    type: object
                    required:
                      - make
                      - model
                      - year
                      - doors
                    properties:
                      make:
                        type: string
                        description: Vehicle manufacturer
                        example: "AUDI"
                      model:
                        type: string
                        description: Vehicle model
                        example: "e-tron 50"
                      year:
                        type: integer
                        description: Manufacturing year
                        example: 2020
                      doors:
                        type: string
                        description: Number of physical doors (excluding trunk)
                        example: "4-dr"
                      color:
                        type: string
                        description: Vehicle color
                        example: "Blå"
                      bodyType:
                        type: string
                        description: Type of vehicle body
                        example: "Stasjonsvogn ISO-standard 3833:1977, def. nr. 3.1.1.4"
                      dimensions:
                        type: object
                        properties:
                          length:
                            type: integer
                            description: Vehicle length in mm
                            example: 4901
                          width:
                            type: integer
                            description: Vehicle width in mm
                            example: 1935
                          height:
                            type: integer
                            description: Vehicle height in mm
                            example: 1583
                      weight:
                        type: object
                        properties:
                          total:
                            type: integer
                            description: Vehicle weight in kg
                            example: 2465
                          maxRoofLoad:
                            type: integer
                            description: Maximum roof load in kg
                            example: 75
                          payload:
                            type: integer
                            description: Maximum payload in kg
                            example: 500
                          totalAllowed:
                            type: integer
                            description: Maximum total allowed weight in kg
                            example: 3040
                          trailerWeight:
                            type: object
                            properties:
                              withBrakes:
                                type: integer
                                description: Maximum trailer weight with brakes in kg
                                example: 1800
                              withoutBrakes:
                                type: integer
                                description: Maximum trailer weight without brakes in kg
                                example: 750
                              verticalLoad:
                                type: integer
                                description: Maximum vertical coupling load in kg
                                example: 80
                              totalTrainWeight:
                                type: integer
                                description: Maximum total train weight in kg
                                example: 4840
                      engine:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            type: string
                            enum: [electric, hybrid, conventional]
                            description: Type of engine/powertrain
                            example: "electric"
                          maxSpeed:
                            type: integer
                            description: Maximum speed in km/h
                            example: 190
                          motors:
                            type: array
                            description: List of electric motors (for electric/hybrid vehicles)
                            items:
                              type: object
                              properties:
                                power:
                                  type: object
                                  properties:
                                    hourly:
                                      type: integer
                                      description: Continuous power output in kW
                                      example: 70
                                    peak:
                                      type: integer
                                      description: Peak power output in kW
                                      example: 115
                                code:
                                  type: string
                                  description: Motor code
                                  example: "EAS"
                          transmission:
                            type: string
                            description: Transmission type
                            example: "Automat"
                      electric:
                        type: object
                        description: Electric vehicle specific data
                        properties:
                          range:
                            type: integer
                            description: Range in km (WLTP)
                            example: 295
                          consumption:
                            type: integer
                            description: Energy consumption in Wh/km
                            example: 251
                          emissionClass:
                            type: string
                            description: Emission class
                            example: "0-utslipp"
                      seating:
                        type: object
                        properties:
                          total:
                            type: integer
                            description: Total number of seats
                            example: 5
                          front:
                            type: integer
                            description: Number of front seats
                            example: 2
                      noise:
                        type: object
                        properties:
                          level:
                            type: integer
                            description: Noise level in dB
                            example: 68
                          source:
                            type: string
                            description: Source of noise measurement
                            example: "Produsent"
                  debug:
                    type: object
                    description: Additional technical data for debugging (only in development)
        '400':
          description: Bad request - invalid license plate format or missing parameter
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - error
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Invalid license plate format"
        '404':
          description: Vehicle not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - error
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Vehicle not found"
        '500':
          description: Server error during lookup
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - error
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Failed to fetch vehicle data"
                  debug:
                    type: object
                    description: Additional error details (only in development) 